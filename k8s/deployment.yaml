apiVersion: apps/v1
kind: Deployment
metadata:
  name: tiny-service
  labels:
    app: tiny-service
    version: v1.0.0
    component: api
    tier: backend
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "Tiny Python"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: tiny-service
  template:
    metadata:
      labels:
        app: tiny-service
        version: v1.0.0
        component: api
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: tiny-service
          image: tiny-service:latest
          imagePullPolicy: Never # For local kind deployment
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: WELCOME_PREFIX
              valueFrom:
                secretKeyRef:
                  name: tiny-service-secret
                  key: welcome-prefix
                  optional: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
